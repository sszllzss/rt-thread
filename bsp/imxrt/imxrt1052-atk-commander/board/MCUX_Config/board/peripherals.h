/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_lpuart.h"
#include "fsl_clock.h"
#include "fsl_csi.h"
#include "fsl_lpi2c.h"
#include "fsl_flexcan.h"
#include "fsl_elcdif.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitDEBUG_UARTPeripheral functional group */
/* Definition of peripheral ID */
#define BOARD_DEBUG_UART_PERIPHERAL LPUART1
/* Definition of the clock source frequency */
#define BOARD_DEBUG_UART_CLOCK_SOURCE 80000000UL

/* Definitions for BOARD_InitCSIPeripheral functional group */
/* Definition of peripheral ID */
#define BOARD_CSI_PERIPHERAL CSI
/* Definition of the clock source frequency */
#define BOARD_CSI_CLK_FREQ 150000000UL
/* Definition of the MCLK (master clock) clock source frequency */
#define BOARD_CSI_MCLK_FREQ 12000000UL
/* Definition of the frame width (number of pixels in the line) */
#define BOARD_CSI_FRAME_WIDTH 320
/* Definition of the frame height (number of lines) */
#define BOARD_CSI_FRAME_HEIGHT 240
/* Definition of the bytes per pixel size */
#define BOARD_CSI_BYTES_PER_PIXEL 2
/* Definition of the line pitch size in bytes */
#define BOARD_CSI_LINE_PITCH_BYTES 640
/* Definition of number of the buffers inside allocated block */
#define BOARD_CSI_FRAME_BUFFER_COUNT 4
/* Definition of the frame buffer block alignment */
#define BOARD_CSI_BUFFER_ALIGN 64
/* BOARD_InitCSIPeripheral defines for LPI2C1 */
/* Definition of peripheral ID */
#define BOARD_CSI_LPI2C_PERIPHERAL LPI2C1
/* Definition of clock source */
#define BOARD_CSI_LPI2C_CLOCK_FREQ 60000000UL
/* Transfer buffer size */
#define BOARD_CSI_LPI2C_MASTER_BUFFER_SIZE 1

/* Definitions for BOARD_InitCANPeripheral functional group */
/* Definition of peripheral ID */
#define BOARD_CAN_PERIPHERAL CAN2
/* Definition of the clock source frequency */
#define BOARD_CAN_CLOCK_SOURCE 40000000UL

/* Definitions for BOARD_InitLCDPeripheral functional group */
/* Definition of peripheral ID */
#define BOARD_LCD_PERIPHERAL LCDIF
/* Definition of the expected display clock frequency */
#define BOARD_LCD_EXPECTED_DCLK_FREQ 9210240UL
/* Definition of the panel width */
#define BOARD_LCD_PANEL_WIDTH 480
/* Definition of the panel height */
#define BOARD_LCD_PANEL_HEIGHT 272
/* Definition of the RGB buffer alignment */
#define BOARD_LCD_RGB_BUFFER_ALIGN 64
/* LCD interrupt vector ID (number). */
#define BOARD_LCD_LCDIF_IRQN LCDIF_IRQn
/* LCD interrupt handler identifier. */
#define BOARD_LCD_LCDIF_IRQHANDLER LCDIF_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const lpuart_config_t BOARD_DEBUG_UART_config;
extern csi_config_t BOARD_CSI_config;
/* Frame buffer block */
extern uint16_t BOARD_CSI_Buffer[BOARD_CSI_FRAME_BUFFER_COUNT][BOARD_CSI_FRAME_HEIGHT][BOARD_CSI_FRAME_WIDTH];
extern const lpi2c_master_config_t BOARD_CSI_LPI2C_masterConfig;
extern lpi2c_master_transfer_t BOARD_CSI_LPI2C_masterTransfer;
extern uint8_t BOARD_CSI_LPI2C_masterBuffer[BOARD_CSI_LPI2C_MASTER_BUFFER_SIZE];
extern lpi2c_master_handle_t BOARD_CSI_LPI2C_masterHandle;
extern const flexcan_config_t BOARD_CAN_config;
/* Message buffer 0 configuration structure */
extern const flexcan_rx_mb_config_t BOARD_CAN_rx_mb_config_0;
extern flexcan_rx_fifo_config_t BOARD_CAN_rx_fifo_config;
/* RGB mode configuration */
extern const elcdif_rgb_mode_config_t BOARD_LCD_rgbConfig;
/* RGB buffer */
extern uint16_t BOARD_LCD_Buffer[2][BOARD_LCD_PANEL_HEIGHT][BOARD_LCD_PANEL_WIDTH];

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);
void BOARD_InitDEBUG_UARTPeripheral(void);
void BOARD_InitCSIPeripheral(void);
void BOARD_InitCANPeripheral(void);
void BOARD_InitLCDPeripheral(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
